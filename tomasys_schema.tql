define

## ATTRIBUTES 
name sub attribute, 
    abstract, 
    value string;

component-name sub name;
function-name sub name;
function-design-name sub name;
qa-name sub name;
objective-name sub name;

qa-value sub attribute, value double;
#/qa-type sub attribute, value string;

status sub attribute, 
    abstract,
    value string,
    regex "^(ok|error)$"; 

objective-status sub status;
function-grounding-status sub status;

## ENTITIES
Objective sub entity,
    owns objective-name @key,
    owns objective-status, #initialize with a default value? is that possible?
    plays typeF:objective,
    plays solvesO:solved;

Function sub entity,
    owns function-name @key,
    plays typeF:function,
    plays solvesF:solved;

FunctionDesign sub entity,
    owns function-design-name @key,
    plays solvesF:solver,
    plays hasEstimatedQA:function-design,
    plays requiresComponent:function-design;

FunctionGrounding sub entity,
    owns function-grounding-status,
    plays solvesO:solver,
    plays hasMeasuredQA:function-grounding;

Component sub entity,
    abstract,
    owns component-name @key,
    plays requiresComponent:component;

QualityAttribute sub entity, 
    abstract,
#    owns qa-type,/
    owns qa-name,
    owns qa-value,
    plays hasNFR:qa,
    plays hasMeasuredQA:qa,
    plays hasEstimatedQA:qa;

## RELATIONS
solvesF sub relation,
    relates solved,
    relates solver;
    
solvesO sub relation,
    relates solved,
    relates solver;

requiresO sub relation,
     relates objective,
     relates function-grounding;

typeF sub relation,
    relates function,
    relates objective;
    
hasNFR sub relation,
    relates objective,
    relates qa;

hasMeasuredQA sub relation,
    relates function-grounding,
    relates qa;
    
hasEstimatedQA sub relation,
    relates function-design,
    relates qa;

requiresComponent sub relation,
    relates component,
    relates function-design;

## Rules
rule objective-status-propagation:
    when{
        $o isa Objective, has objective-status "error";
        (solved:$o, solver:$fg) isa solvesO;
    } then {
        $fg has function-grounding-status "error";
    };
